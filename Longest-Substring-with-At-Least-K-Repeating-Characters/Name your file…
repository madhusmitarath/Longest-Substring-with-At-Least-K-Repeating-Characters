def longestSubstring(s: str, k: int) -> int:
        
        counter = [0 for x in range(26)]
        for i in range(len(s)):
            counter[ord(s[i]) - ord('a')] += 1
                
        low = 0
        hi = len(s)-1
        while low<=hi:
            
            while low<=hi and 0<counter[ord(s[low])-ord('a')]<k :
                counter[ord(s[low])-ord('a')]-=1
                low+=1
            while  hi>=low and 0<counter[ord(s[hi])-ord('a')]<k :
                counter[ord(s[hi])-ord('a')]-=1
                hi-=1
                
            if check(counter,k) == True:
                return hi-low+1
            low1=low
            hi1=hi
            while low<=hi:
                if counter[ord(s[hi])-ord('a')]<k: 
                    low=low1
                    while hi1>hi:
                        counter[ord(s[hi1])-ord('a')]-=1
                        hi1-=1
                    break
                if counter[ord(s[low])-ord('a')]<k: 
                    hi=hi1
                    while low1<low:
                        counter[ord(s[low1])-ord('a')]-=1
                        low1+=1
                    break    
                hi-=1
                low+=1
                
        return 0  
                

def check(counter, k):
        
        for i in counter:
            if 0<i<k:
                return False
        return True

s = "ababacb"
k = 3
p=longestSubstring(s,k)
print(p)
